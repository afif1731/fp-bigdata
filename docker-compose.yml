services:
  spark-master:
    image: cluster-apache-spark:3.2.0  # docker build -t cluster-apache-spark:3.2.0 ./Dockerfiles/spark
    container_name: master
    hostname: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./workspace:/opt/workspace
    env_file:
      - ./config.env
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
      - PATH=/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/spark/sbin

  spark-worker-a:
    image: cluster-apache-spark:3.2.0
    container_name: worker-a
    hostname: spark-worker-a
    depends_on:
      spark-master:
        condition: service_started
    ports:
      - "9091:8080"
      - "7000:7000"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
    volumes:
      - ./workspace:/opt/workspace

  spark-worker-b:
    image: cluster-apache-spark:3.2.0
    container_name: worker-b
    hostname: spark-worker-b
    depends_on:
      spark-master:
        condition: service_started
    ports:
      - "9092:8080"
      - "7001:7000"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-b
    volumes:
      - ./workspace:/opt/workspace

  minio:
    image: quay.io/minio/minio
    container_name: minio
    hostname: minio
    restart: always
    environment:
      - MINIO_ROOT_USER=adminbigdata
      - MINIO_ROOT_PASSWORD=2444666668888888
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:14.2
    container_name: postgres
    hostname: postgres
    restart: always
    volumes:
      - ./database-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    hostname: mariadb
    ports:
      - "3306:3306"
    environment:
      - USE_S3_STORAGE=0
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=adminbigdata
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=metastore_db

  hive-metastore:
    build: ./Dockerfiles/hive-metastore
    container_name: hive-metastore
    hostname: hive-metastore
    restart: unless-stopped
    ports:
      - "9083:9083"
    depends_on:
      db:
        condition: service_started

  presto:
    image: presto:0.272.1
    container_name: presto
    hostname: presto
    volumes:
      - ./presto-config:/opt/presto/etc/catalog
    ports:
      - "8000:8080"
    depends_on:
      hive-metastore:
        condition: service_started

networks:
  default:
    name: spark-network
    driver: bridge
